// Mocks generated by Mockito 5.0.16 from annotations
// in tv_shows/test/business_logic/viewmodels/comment/comment_viewmodel_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_shows/business_logic/models/comment.dart' as _i4;
import 'package:tv_shows/services/comment/comment_service.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [CommentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommentService extends _i1.Mock implements _i2.CommentService {
  MockCommentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Comment>> getComments(String? id) =>
      (super.noSuchMethod(Invocation.method(#getComments, [id]),
              returnValue: Future<List<_i4.Comment>>.value(<_i4.Comment>[]))
          as _i3.Future<List<_i4.Comment>>);
  @override
  _i3.Future<void> postComment({String? text, String? id}) => (super
      .noSuchMethod(Invocation.method(#postComment, [], {#text: text, #id: id}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}
